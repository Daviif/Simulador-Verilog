$date
	Thu Aug 14 21:17:50 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench_simple $end
$scope module uut $end
$var wire 1 ! MemWrite_safe $end
$var wire 1 " RegWrite_safe $end
$var wire 1 # branch_taken $end
$var wire 1 $ clock $end
$var wire 1 % pc_write $end
$var wire 1 & raw_hazard $end
$var wire 1 ' reset $end
$var wire 1 ( zero $end
$var wire 32 ) write_back_data [31:0] $end
$var wire 5 * rs2 [4:0] $end
$var wire 5 + rs1 [4:0] $end
$var wire 32 , read_data2 [31:0] $end
$var wire 32 - read_data1 [31:0] $end
$var wire 5 . rd [4:0] $end
$var wire 32 / pc_prox [31:0] $end
$var wire 32 0 pc_plus4 [31:0] $end
$var wire 32 1 pc [31:0] $end
$var wire 7 2 opcode [6:0] $end
$var wire 32 3 instrucao [31:0] $end
$var wire 32 4 immediate [31:0] $end
$var wire 7 5 funct7 [6:0] $end
$var wire 3 6 funct3 [2:0] $end
$var wire 32 7 branch_alvo [31:0] $end
$var wire 32 8 alu_result [31:0] $end
$var wire 32 9 alu_entrada2 [31:0] $end
$var wire 4 : alu_control [3:0] $end
$var wire 1 ; RegWrite $end
$var wire 1 < MemtoReg $end
$var wire 1 = MemWrite $end
$var wire 32 > MemRead_data [31:0] $end
$var wire 1 ? MemRead $end
$var wire 1 @ Branch $end
$var wire 1 A ALUSrc $end
$var wire 2 B ALUOp [1:0] $end
$var reg 1 C prev_RegWrite $end
$var reg 5 D prev_rd [4:0] $end
$var reg 1 E stall_cycle $end
$scope module InstMem $end
$var wire 32 F instrucao [31:0] $end
$var wire 32 G endereco [31:0] $end
$var integer 32 H i [31:0] $end
$upscope $end
$scope module alu $end
$var wire 32 I entrada2 [31:0] $end
$var wire 1 ( zero $end
$var wire 32 J entrada1 [31:0] $end
$var wire 4 K alu_control [3:0] $end
$var reg 32 L resultado [31:0] $end
$upscope $end
$scope module aluCtrl $end
$var wire 3 M funct3 [2:0] $end
$var wire 7 N funct7 [6:0] $end
$var wire 2 O ALUOp [1:0] $end
$var reg 4 P alu_control [3:0] $end
$upscope $end
$scope module ctrl $end
$var wire 7 Q opcode [6:0] $end
$var reg 2 R ALUOp [1:0] $end
$var reg 1 A ALUSrc $end
$var reg 1 @ Branch $end
$var reg 1 ? MemRead $end
$var reg 1 = MemWrite $end
$var reg 1 < MemtoReg $end
$var reg 1 ; RegWrite $end
$upscope $end
$scope module dataMem $end
$var wire 1 S MemRead $end
$var wire 1 ! MemWrite $end
$var wire 1 $ clock $end
$var wire 32 T endereco [31:0] $end
$var wire 3 U funct3 [2:0] $end
$var wire 32 V write_data [31:0] $end
$var wire 32 W read_data [31:0] $end
$var reg 32 X read_data_reg [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 Y i [31:0] $end
$upscope $end
$upscope $end
$scope module immGen $end
$var wire 32 Z instrucao [31:0] $end
$var wire 7 [ opcode [6:0] $end
$var reg 32 \ imm_out [31:0] $end
$upscope $end
$scope module pc_mux $end
$var wire 32 ] entrada1 [31:0] $end
$var wire 32 ^ entrada2 [31:0] $end
$var wire 1 # seletor $end
$var wire 32 _ saida [31:0] $end
$upscope $end
$scope module pc_reg $end
$var wire 1 $ clock $end
$var wire 32 ` pc_prox [31:0] $end
$var wire 1 % pc_write $end
$var wire 1 ' reset $end
$var reg 32 a pc [31:0] $end
$upscope $end
$scope module registradores $end
$var wire 1 " RegWrite $end
$var wire 1 $ clock $end
$var wire 5 b rd [4:0] $end
$var wire 5 c rs1 [4:0] $end
$var wire 5 d rs2 [4:0] $end
$var wire 32 e write_data [31:0] $end
$var reg 32 f read_data1 [31:0] $end
$var reg 32 g read_data2 [31:0] $end
$var integer 32 h i [31:0] $end
$upscope $end
$scope module write_back_mux $end
$var wire 32 i entrada1 [31:0] $end
$var wire 32 j entrada2 [31:0] $end
$var wire 1 < seletor $end
$var wire 32 k saida [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111 k
b0 j
b1111 i
b100000 h
b0 g
b0 f
b1111 e
b1111 d
b0 c
b10 b
b0 a
b100 `
b100 _
b1111 ^
b100 ]
b1111 \
b10011 [
b111100000000000100010011 Z
b100000000 Y
b0 X
b0 W
b0 V
b0 U
b1111 T
0S
b0 R
b10011 Q
b0 P
b0 O
b0 N
b0 M
b1111 L
b0 K
b0 J
b1111 I
b1111 H
b0 G
b111100000000000100010011 F
0E
b0 D
0C
b0 B
1A
0@
0?
b0 >
0=
0<
1;
b0 :
b1111 9
b1111 8
b1111 7
b0 6
b0 5
b1111 4
b111100000000000100010011 3
b10011 2
b0 1
b100 0
b100 /
b10 .
b0 -
b0 ,
b0 +
b1111 *
b1111 )
0(
1'
0&
1%
0$
0#
1"
0!
$end
#5000
1$
#10000
0$
0'
#15000
b0 )
b0 e
b0 k
1(
b0 8
b0 L
b0 T
b0 i
b0 9
b0 I
b0 4
b0 \
b0 *
b0 d
b0 .
b0 b
b10011 3
b10011 F
b10011 Z
b1000 /
b1000 _
b1000 `
b100 7
b100 ^
b1000 0
b1000 ]
b100 1
b100 G
b100 a
1C
b10 D
1$
#20000
0$
#25000
1!
0"
b10 9
b10 I
b1111 ,
b1111 V
b1111 g
b1000 :
b1000 K
b1000 P
1=
0;
1A
b10 4
b10 \
b100011 [
b10 *
b10 d
b1 6
b1 M
b1 U
b10 .
b10 b
b100011 2
b100011 Q
b1000000001000100100011 3
b1000000001000100100011 F
b1000000001000100100011 Z
b1100 /
b1100 _
b1100 `
b0 D
b1010 7
b1010 ^
b1100 0
b1100 ]
b1000 1
b1000 G
b1000 a
1$
#30000
0$
#35000
b0 )
b0 e
b0 k
1S
1"
0!
b0 9
b0 I
b0 ,
b0 V
b0 g
1<
1?
1;
1A
0=
b0 4
b0 \
b11 [
b0 *
b0 d
b100 .
b100 b
b11 2
b11 Q
b0 >
b0 W
b0 X
b0 j
b1001000000011 3
b1001000000011 F
b1001000000011 Z
b10000 /
b10000 _
b10000 `
b1100 7
b1100 ^
b10000 0
b10000 ]
b1100 1
b1100 G
b1100 a
0C
b10 D
1$
#40000
0$
#45000
0(
b1111 8
b1111 L
b1111 T
b1111 i
b1111 -
b1111 J
b1111 f
b10 +
b10 c
b110 .
b110 b
b10001001100000011 3
b10001001100000011 F
b10001001100000011 Z
b10100 /
b10100 _
b10100 `
1C
b100 D
b10000 7
b10000 ^
b10100 0
b10100 ]
b10000 1
b10000 G
b10000 a
1$
#50000
0$
#55000
1(
b0 8
b0 L
b0 T
b0 i
b0 )
b0 e
b0 k
0S
b0 -
b0 J
b0 f
b0 :
b0 K
b0 P
0<
1;
1A
0?
b10011 [
b0 +
b0 c
b0 6
b0 M
b0 U
b0 .
b0 b
b10011 2
b10011 Q
b10011 3
b10011 F
b10011 Z
b11000 /
b11000 _
b11000 `
b10100 7
b10100 ^
b11000 0
b11000 ]
b10100 1
b10100 G
b10100 a
b110 D
1$
#60000
0$
#65000
bx )
bx e
bx k
x(
bx 8
bx L
bx T
bx i
0"
bx 9
bx I
bx ,
bx V
bx g
bx -
bx J
bx f
0;
0A
bx [
bx 5
bx N
bx *
bx d
bx +
bx c
bx 6
bx M
bx U
bx .
bx b
bx 2
bx Q
bx 3
bx F
bx Z
b11100 /
b11100 _
b11100 `
b0 D
b11000 7
b11000 ^
b11100 0
b11100 ]
b11000 1
b11000 G
b11000 a
1$
#70000
0$
#75000
b100000 /
b100000 _
b100000 `
b11100 7
b11100 ^
b100000 0
b100000 ]
b11100 1
b11100 G
b11100 a
0C
bx D
1$
#80000
0$
#85000
b100100 /
b100100 _
b100100 `
b100000 7
b100000 ^
b100100 0
b100100 ]
b100000 1
b100000 G
b100000 a
1$
#90000
0$
#95000
b101000 /
b101000 _
b101000 `
b100100 7
b100100 ^
b101000 0
b101000 ]
b100100 1
b100100 G
b100100 a
1$
#100000
0$
#105000
b101100 /
b101100 _
b101100 `
b101000 7
b101000 ^
b101100 0
b101100 ]
b101000 1
b101000 G
b101000 a
1$
#110000
0$
#115000
b110000 /
b110000 _
b110000 `
b101100 7
b101100 ^
b110000 0
b110000 ]
b101100 1
b101100 G
b101100 a
1$
#120000
0$
#125000
b110100 /
b110100 _
b110100 `
b110000 7
b110000 ^
b110100 0
b110100 ]
b110000 1
b110000 G
b110000 a
1$
#130000
0$
#135000
b111000 /
b111000 _
b111000 `
b110100 7
b110100 ^
b111000 0
b111000 ]
b110100 1
b110100 G
b110100 a
1$
#140000
0$
#145000
b111100 /
b111100 _
b111100 `
b111000 7
b111000 ^
b111100 0
b111100 ]
b111000 1
b111000 G
b111000 a
1$
#150000
0$
#155000
b1000000 /
b1000000 _
b1000000 `
b111100 7
b111100 ^
b1000000 0
b1000000 ]
b111100 1
b111100 G
b111100 a
1$
#160000
0$
#165000
b1000100 /
b1000100 _
b1000100 `
b1000000 7
b1000000 ^
b1000100 0
b1000100 ]
b1000000 1
b1000000 G
b1000000 a
1$
#170000
0$
#175000
b1001000 /
b1001000 _
b1001000 `
b1000100 7
b1000100 ^
b1001000 0
b1001000 ]
b1000100 1
b1000100 G
b1000100 a
1$
#180000
0$
#185000
b1001100 /
b1001100 _
b1001100 `
b1001000 7
b1001000 ^
b1001100 0
b1001100 ]
b1001000 1
b1001000 G
b1001000 a
1$
#190000
0$
#195000
b1010000 /
b1010000 _
b1010000 `
b1001100 7
b1001100 ^
b1010000 0
b1010000 ]
b1001100 1
b1001100 G
b1001100 a
1$
#200000
0$
#205000
b1010100 /
b1010100 _
b1010100 `
b1010000 7
b1010000 ^
b1010100 0
b1010100 ]
b1010000 1
b1010000 G
b1010000 a
1$
#210000
0$
#215000
b1011000 /
b1011000 _
b1011000 `
b1010100 7
b1010100 ^
b1011000 0
b1011000 ]
b1010100 1
b1010100 G
b1010100 a
1$
#220000
0$
#225000
b1011100 /
b1011100 _
b1011100 `
b1011000 7
b1011000 ^
b1011100 0
b1011100 ]
b1011000 1
b1011000 G
b1011000 a
1$
#230000
0$
#235000
b1100000 /
b1100000 _
b1100000 `
b1011100 7
b1011100 ^
b1100000 0
b1100000 ]
b1011100 1
b1011100 G
b1011100 a
1$
#240000
0$
#245000
b1100100 /
b1100100 _
b1100100 `
b1100000 7
b1100000 ^
b1100100 0
b1100100 ]
b1100000 1
b1100000 G
b1100000 a
1$
#250000
0$
#255000
b1101000 /
b1101000 _
b1101000 `
b1100100 7
b1100100 ^
b1101000 0
b1101000 ]
b1100100 1
b1100100 G
b1100100 a
1$
#260000
0$
#265000
b1101100 /
b1101100 _
b1101100 `
b1101000 7
b1101000 ^
b1101100 0
b1101100 ]
b1101000 1
b1101000 G
b1101000 a
1$
#270000
0$
#275000
b1110000 /
b1110000 _
b1110000 `
b1101100 7
b1101100 ^
b1110000 0
b1110000 ]
b1101100 1
b1101100 G
b1101100 a
1$
#280000
0$
#285000
b1110100 /
b1110100 _
b1110100 `
b1110000 7
b1110000 ^
b1110100 0
b1110100 ]
b1110000 1
b1110000 G
b1110000 a
1$
#290000
0$
#295000
b1111000 /
b1111000 _
b1111000 `
b1110100 7
b1110100 ^
b1111000 0
b1111000 ]
b1110100 1
b1110100 G
b1110100 a
1$
#300000
0$
#305000
b1111100 /
b1111100 _
b1111100 `
b1111000 7
b1111000 ^
b1111100 0
b1111100 ]
b1111000 1
b1111000 G
b1111000 a
1$
#310000
0$
#315000
b10000000 /
b10000000 _
b10000000 `
b1111100 7
b1111100 ^
b10000000 0
b10000000 ]
b1111100 1
b1111100 G
b1111100 a
1$
#320000
0$
#325000
b10000100 /
b10000100 _
b10000100 `
b10000000 7
b10000000 ^
b10000100 0
b10000100 ]
b10000000 1
b10000000 G
b10000000 a
1$
#330000
0$
#335000
b10001000 /
b10001000 _
b10001000 `
b10000100 7
b10000100 ^
b10001000 0
b10001000 ]
b10000100 1
b10000100 G
b10000100 a
1$
#340000
0$
#345000
b10001100 /
b10001100 _
b10001100 `
b10001000 7
b10001000 ^
b10001100 0
b10001100 ]
b10001000 1
b10001000 G
b10001000 a
1$
#350000
0$
#355000
b10010000 /
b10010000 _
b10010000 `
b10001100 7
b10001100 ^
b10010000 0
b10010000 ]
b10001100 1
b10001100 G
b10001100 a
1$
#360000
0$
#365000
b10010100 /
b10010100 _
b10010100 `
b10010000 7
b10010000 ^
b10010100 0
b10010100 ]
b10010000 1
b10010000 G
b10010000 a
1$
#370000
0$
#375000
b10011000 /
b10011000 _
b10011000 `
b10010100 7
b10010100 ^
b10011000 0
b10011000 ]
b10010100 1
b10010100 G
b10010100 a
1$
#380000
0$
#385000
b10011100 /
b10011100 _
b10011100 `
b10011000 7
b10011000 ^
b10011100 0
b10011100 ]
b10011000 1
b10011000 G
b10011000 a
1$
#390000
0$
#395000
b10100000 /
b10100000 _
b10100000 `
b10011100 7
b10011100 ^
b10100000 0
b10100000 ]
b10011100 1
b10011100 G
b10011100 a
1$
#400000
0$
#405000
b10100100 /
b10100100 _
b10100100 `
b10100000 7
b10100000 ^
b10100100 0
b10100100 ]
b10100000 1
b10100000 G
b10100000 a
1$
#410000
0$
#415000
b10101000 /
b10101000 _
b10101000 `
b10100100 7
b10100100 ^
b10101000 0
b10101000 ]
b10100100 1
b10100100 G
b10100100 a
1$
#420000
0$
#425000
b10101100 /
b10101100 _
b10101100 `
b10101000 7
b10101000 ^
b10101100 0
b10101100 ]
b10101000 1
b10101000 G
b10101000 a
1$
#430000
0$
#435000
b10110000 /
b10110000 _
b10110000 `
b10101100 7
b10101100 ^
b10110000 0
b10110000 ]
b10101100 1
b10101100 G
b10101100 a
1$
#440000
0$
#445000
b10110100 /
b10110100 _
b10110100 `
b10110000 7
b10110000 ^
b10110100 0
b10110100 ]
b10110000 1
b10110000 G
b10110000 a
1$
#450000
0$
#455000
b10111000 /
b10111000 _
b10111000 `
b10110100 7
b10110100 ^
b10111000 0
b10111000 ]
b10110100 1
b10110100 G
b10110100 a
1$
#460000
0$
#465000
b10111100 /
b10111100 _
b10111100 `
b10111000 7
b10111000 ^
b10111100 0
b10111100 ]
b10111000 1
b10111000 G
b10111000 a
1$
#470000
0$
#475000
b11000000 /
b11000000 _
b11000000 `
b10111100 7
b10111100 ^
b11000000 0
b11000000 ]
b10111100 1
b10111100 G
b10111100 a
1$
#480000
0$
#485000
b11000100 /
b11000100 _
b11000100 `
b11000000 7
b11000000 ^
b11000100 0
b11000100 ]
b11000000 1
b11000000 G
b11000000 a
1$
#490000
0$
#495000
b11001000 /
b11001000 _
b11001000 `
b11000100 7
b11000100 ^
b11001000 0
b11001000 ]
b11000100 1
b11000100 G
b11000100 a
1$
#500000
0$
#505000
b11001100 /
b11001100 _
b11001100 `
b11001000 7
b11001000 ^
b11001100 0
b11001100 ]
b11001000 1
b11001000 G
b11001000 a
1$
#510000
0$
