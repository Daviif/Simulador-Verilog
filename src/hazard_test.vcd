$date
	Sun Aug 10 21:28:24 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench_hazard $end
$scope module uut $end
$var wire 1 ! MemtoReg $end
$var wire 1 " MemtoReg_final $end
$var wire 1 # branch_taken $end
$var wire 1 $ clock $end
$var wire 1 % reset $end
$var wire 1 & wb_RegWrite $end
$var wire 5 ' wb_rd [4:0] $end
$var wire 1 ( zero $end
$var wire 32 ) write_back_data [31:0] $end
$var wire 5 * rs2 [4:0] $end
$var wire 5 + rs1 [4:0] $end
$var wire 32 , read_data2 [31:0] $end
$var wire 32 - read_data1 [31:0] $end
$var wire 5 . rd [4:0] $end
$var wire 1 / pc_write $end
$var wire 32 0 pc_prox [31:0] $end
$var wire 32 1 pc_plus4 [31:0] $end
$var wire 32 2 pc [31:0] $end
$var wire 7 3 opcode [6:0] $end
$var wire 32 4 instrucao [31:0] $end
$var wire 32 5 immediate [31:0] $end
$var wire 1 6 if_id_write $end
$var wire 7 7 funct7 [6:0] $end
$var wire 3 8 funct3 [2:0] $end
$var wire 1 9 control_mux $end
$var wire 32 : alu_result [31:0] $end
$var wire 32 ; alu_entrada2 [31:0] $end
$var wire 4 < alu_control [3:0] $end
$var wire 1 = RegWrite_final $end
$var wire 1 > RegWrite $end
$var wire 1 ? MentoReg_final $end
$var wire 1 @ MemWrite_final $end
$var wire 1 A MemWrite $end
$var wire 1 B MemRead_final $end
$var wire 32 C MemRead_data [31:0] $end
$var wire 1 D MemRead $end
$var wire 1 E Branch_final $end
$var wire 1 F Branch $end
$var wire 1 G ALUSrc_final $end
$var wire 1 H ALUSrc $end
$var wire 2 I ALUOp_final [1:0] $end
$var wire 2 J ALUOp [1:0] $end
$var reg 1 K ex_mem_Branch $end
$var reg 1 L ex_mem_MemRead $end
$var reg 1 M ex_mem_MemWrite $end
$var reg 1 N ex_mem_MemtoReg $end
$var reg 1 O ex_mem_RegWrite $end
$var reg 32 P ex_mem_alu_result [31:0] $end
$var reg 32 Q ex_mem_branch_alvo [31:0] $end
$var reg 32 R ex_mem_pc_plus4 [31:0] $end
$var reg 5 S ex_mem_rd [4:0] $end
$var reg 32 T ex_mem_read_data2 [31:0] $end
$var reg 1 U ex_mem_zero $end
$var reg 2 V id_ex_ALUOp [1:0] $end
$var reg 1 W id_ex_ALUSrc $end
$var reg 1 X id_ex_Branch $end
$var reg 1 Y id_ex_MemRead $end
$var reg 1 Z id_ex_MemWrite $end
$var reg 1 [ id_ex_MemtoReg $end
$var reg 1 \ id_ex_RegWrite $end
$var reg 3 ] id_ex_funct3 [2:0] $end
$var reg 7 ^ id_ex_funct7 [6:0] $end
$var reg 32 _ id_ex_immediate [31:0] $end
$var reg 32 ` id_ex_pc [31:0] $end
$var reg 32 a id_ex_pc_plus4 [31:0] $end
$var reg 5 b id_ex_rd [4:0] $end
$var reg 32 c id_ex_read_data1 [31:0] $end
$var reg 32 d id_ex_read_data2 [31:0] $end
$var reg 5 e id_ex_rs1 [4:0] $end
$var reg 5 f id_ex_rs2 [4:0] $end
$var reg 32 g if_id_instrucao [31:0] $end
$var reg 32 h if_id_pc [31:0] $end
$var reg 32 i if_id_pc_plus4 [31:0] $end
$var reg 1 j mem_wb_MemtoReg $end
$var reg 1 k mem_wb_RegWrite $end
$var reg 32 l mem_wb_alu_result [31:0] $end
$var reg 5 m mem_wb_rd [4:0] $end
$var reg 32 n mem_wb_read_data [31:0] $end
$scope module InstMem $end
$var wire 32 o instrucao [31:0] $end
$var wire 32 p endereco [31:0] $end
$upscope $end
$scope module alu $end
$var wire 32 q entrada1 [31:0] $end
$var wire 32 r entrada2 [31:0] $end
$var wire 1 ( zero $end
$var wire 4 s alu_control [3:0] $end
$var reg 32 t resultado [31:0] $end
$upscope $end
$scope module aluCtrl $end
$var wire 2 u ALUOp [1:0] $end
$var wire 3 v funct3 [2:0] $end
$var wire 7 w funct7 [6:0] $end
$var reg 4 x alu_control [3:0] $end
$upscope $end
$scope module ctrl $end
$var wire 7 y opcode [6:0] $end
$var reg 2 z ALUOp [1:0] $end
$var reg 1 H ALUSrc $end
$var reg 1 F Branch $end
$var reg 1 D MemRead $end
$var reg 1 A MemWrite $end
$var reg 1 { MemtoReg $end
$var reg 1 > RegWrite $end
$upscope $end
$scope module dataMem $end
$var wire 1 L MemRead $end
$var wire 1 M MemWrite $end
$var wire 1 $ clock $end
$var wire 32 | endereco [31:0] $end
$var wire 32 } write_data [31:0] $end
$var wire 32 ~ read_data [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 !" i [31:0] $end
$upscope $end
$upscope $end
$scope module hazard_unit $end
$var wire 1 Y MemRead_EX $end
$var wire 1 \ RegWrite_EX $end
$var wire 1 O RegWrite_MEM $end
$var wire 5 "" rd_EX [4:0] $end
$var wire 5 #" rd_MEM [4:0] $end
$var wire 5 $" rs1 [4:0] $end
$var wire 5 %" rs2 [4:0] $end
$var reg 1 9 control_mux $end
$var reg 1 6 if_id_write $end
$var reg 1 / pc_write $end
$upscope $end
$scope module immGen $end
$var wire 32 &" instrucao [31:0] $end
$var wire 7 '" opcode [6:0] $end
$var reg 32 (" imm_out [31:0] $end
$upscope $end
$scope module pc_mux $end
$var wire 32 )" entrada1 [31:0] $end
$var wire 32 *" entrada2 [31:0] $end
$var wire 1 # seletor $end
$var wire 32 +" saida [31:0] $end
$upscope $end
$scope module pc_reg $end
$var wire 1 $ clock $end
$var wire 32 ," pc_prox [31:0] $end
$var wire 1 / pc_write $end
$var wire 1 % reset $end
$var reg 32 -" pc [31:0] $end
$upscope $end
$scope module registradores $end
$var wire 1 & RegWrite $end
$var wire 1 $ clock $end
$var wire 5 ." rd [4:0] $end
$var wire 5 /" rs1 [4:0] $end
$var wire 5 0" rs2 [4:0] $end
$var wire 32 1" write_data [31:0] $end
$var reg 32 2" read_data1 [31:0] $end
$var reg 32 3" read_data2 [31:0] $end
$var integer 32 4" i [31:0] $end
$upscope $end
$scope module write_back_mux $end
$var wire 32 5" entrada1 [31:0] $end
$var wire 32 6" entrada2 [31:0] $end
$var wire 1 j seletor $end
$var wire 32 7" saida [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 7"
b0 6"
b0 5"
b100000 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b100 ,"
b100 +"
b0 *"
b100 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b100000000 !"
b0 ~
b0 }
b0 |
0{
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b101000000000000010010011 o
b0 n
b0 m
b0 l
0k
0j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
0\
0[
0Z
0Y
0X
0W
b0 V
0U
b0 T
b0 S
b0 R
b0 Q
b0 P
0O
0N
0M
0L
0K
b0 J
b0 I
0H
0G
0F
0E
0D
b0 C
0B
0A
0@
0?
0>
0=
b0 <
b0 ;
b0 :
09
b0 8
b0 7
16
b0 5
b101000000000000010010011 4
b0 3
b0 2
b100 1
b100 0
1/
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
1(
b0 '
0&
1%
0$
0#
z"
0!
$end
#5000
1$
#10000
0$
0%
#15000
1G
1=
1H
1>
b1100000000001000010011 4
b1100000000001000010011 o
b1000 0
b1000 +"
b1000 ,"
b10011 3
b10011 y
b1 .
b1010 *
b1010 %"
b1010 0"
b1010 5
b1010 ("
b10011 '"
b1000 1
b1000 )"
b100 2
b100 p
b100 -"
b101000000000000010010011 g
b101000000000000010010011 &"
b100 i
z[
1U
1$
#20000
0$
#25000
0(
b1010 :
b1010 t
b1010 ;
b1010 r
b100 .
b11 *
b11 %"
b11 0"
b11 5
b11 ("
b1000001000000110110011 4
b1000001000000110110011 o
b1100 0
b1100 +"
b1100 ,"
zN
1\
1W
b1 b
b1 ""
b1010 f
b1010 _
b100 a
b1100000000001000010011 g
b1100000000001000010011 &"
b1000 i
b100 h
b1100 1
b1100 )"
b1000 2
b1000 p
b1000 -"
1$
#30000
0$
#35000
0=
0G
b10 J
b10 z
1>
0H
19
06
0/
b11 :
b11 t
b1000000001000001000001000110011 4
b1000000001000001000001000110011 o
b10000 0
b10000 +"
b10000 ,"
b110011 3
b110011 y
b11 .
b1 +
b1 $"
b1 /"
b10 *
b10 %"
b10 0"
b0 5
b0 ("
b110011 '"
b11 ;
b11 r
b10000 1
b10000 )"
b1100 2
b1100 p
b1100 -"
b1000001000000110110011 g
b1000001000000110110011 &"
b1100 i
b1000 h
b100 b
b100 ""
b11 f
b11 _
b1000 a
b100 `
1O
0U
b1 S
b1 #"
b1010 P
b1010 |
b1010 Q
b1010 *"
b100 R
zj
1$
#40000
0$
#45000
b10 I
1=
1(
b0 :
b0 t
b0x0x0 )
b0x0x0 1"
b0x0x0 7"
09
16
1/
b0 ;
b0 r
1&
1k
b1 '
b1 ."
b1 m
b1010 l
b1010 5"
b100 S
b100 #"
b11 P
b11 |
b111 Q
b111 *"
b1000 R
0\
0W
b11 b
b11 ""
b10 f
b1 e
b0 _
b1100 a
b1000 `
1$
#50000
0$
#55000
b11111111101100001000001010010011 4
b11111111101100001000001010010011 o
b10100 0
b10100 +"
b10100 ,"
b100 .
b100000 7
b0xx )
b0xx 1"
b0xx 7"
b10100 1
b10100 )"
b10000 2
b10000 p
b10000 -"
b1000000001000001000001000110011 g
b1000000001000001000001000110011 &"
b10000 i
b1100 h
b10 V
b10 u
1\
0O
1U
b11 S
b11 #"
b0 P
b0 |
b1000 Q
b1000 *"
b1100 R
b100 '
b100 ."
b100 m
b11 l
b11 5"
b0x0x0 -
b0x0x0 2"
1$
#60000
0$
#65000
1G
b0 I
1H
b0 J
b0 z
1>
b0 )
b0 1"
b0 7"
b1 <
b1 s
b1 x
x(
bx :
bx t
b10011 3
b10011 y
b101 .
b11011 *
b11011 %"
b11011 0"
b1111111 7
b11111111111111111111111111111011 5
b11111111111111111111111111111011 ("
b10011 '"
bx 4
bx o
b11000 0
b11000 +"
b11000 ,"
0&
0k
b11 '
b11 ."
b11 m
b0 l
b0 5"
1O
b100000 ^
b100000 w
b100 b
b100 ""
b0x0x0 c
b0x0x0 q
b10000 a
b1100 `
b11111111101100001000001010010011 g
b11111111101100001000001010010011 &"
b10100 i
b10000 h
b11000 1
b11000 )"
b10100 2
b10100 p
b10100 -"
1$
#70000
0$
#75000
0=
0G
0>
0H
bx ,
bx 3"
bx -
bx 2"
b11100 0
b11100 +"
b11100 ,"
bx 3
bx y
bx .
bx 8
bx +
bx $"
bx /"
bx *
bx %"
bx 0"
bx 7
b0 5
b0 ("
bx '"
b11111111111111111111111111111011 ;
b11111111111111111111111111111011 r
b0 <
b0 s
b0 x
b11100 1
b11100 )"
b11000 2
b11000 p
b11000 -"
bx g
bx &"
b11000 i
b10100 h
b0 V
b0 u
1W
b1111111 ^
b1111111 w
b101 b
b101 ""
b11011 f
b11111111111111111111111111111011 _
b10100 a
b10000 `
xU
b100 S
b100 #"
bx P
bx |
b1100 Q
b1100 *"
b10000 R
1&
1k
1$
#80000
0$
#85000
bx )
bx 1"
bx 7"
bx ;
bx r
b100000 0
b100000 +"
b100000 ,"
b100 '
b100 ."
b100 m
bx l
bx 5"
b101 S
b101 #"
b1011 Q
b1011 *"
b10100 R
0\
0W
bx ^
bx w
bx ]
bx v
bx b
bx ""
bx f
bx e
b0 _
bx d
bx c
bx q
b11000 a
b10100 `
b11100 i
b11000 h
b100000 1
b100000 )"
b11100 2
b11100 p
b11100 -"
1$
#90000
0$
#95000
b100100 0
b100100 +"
b100100 ,"
b100100 1
b100100 )"
b100000 2
b100000 p
b100000 -"
b100000 i
b11100 h
b11100 a
b11000 `
0O
bx S
bx #"
bx T
bx }
b10100 Q
b10100 *"
b11000 R
b101 '
b101 ."
b101 m
1$
#100000
0$
#105000
b101000 0
b101000 +"
b101000 ,"
0&
0k
bx '
bx ."
bx m
b11000 Q
b11000 *"
b11100 R
b100000 a
b11100 `
b100100 i
b100000 h
b101000 1
b101000 )"
b100100 2
b100100 p
b100100 -"
1$
#110000
0$
#115000
b101100 0
b101100 +"
b101100 ,"
b101100 1
b101100 )"
b101000 2
b101000 p
b101000 -"
b101000 i
b100100 h
b100100 a
b100000 `
b11100 Q
b11100 *"
b100000 R
1$
#120000
0$
#125000
b110000 0
b110000 +"
b110000 ,"
b100000 Q
b100000 *"
b100100 R
b101000 a
b100100 `
b101100 i
b101000 h
b110000 1
b110000 )"
b101100 2
b101100 p
b101100 -"
1$
#130000
0$
#135000
b110100 0
b110100 +"
b110100 ,"
b110100 1
b110100 )"
b110000 2
b110000 p
b110000 -"
b110000 i
b101100 h
b101100 a
b101000 `
b100100 Q
b100100 *"
b101000 R
1$
#140000
0$
#145000
b111000 0
b111000 +"
b111000 ,"
b101000 Q
b101000 *"
b101100 R
b110000 a
b101100 `
b110100 i
b110000 h
b111000 1
b111000 )"
b110100 2
b110100 p
b110100 -"
1$
#150000
0$
#155000
b111100 0
b111100 +"
b111100 ,"
b111100 1
b111100 )"
b111000 2
b111000 p
b111000 -"
b111000 i
b110100 h
b110100 a
b110000 `
b101100 Q
b101100 *"
b110000 R
1$
#160000
0$
#165000
b1000000 0
b1000000 +"
b1000000 ,"
b110000 Q
b110000 *"
b110100 R
b111000 a
b110100 `
b111100 i
b111000 h
b1000000 1
b1000000 )"
b111100 2
b111100 p
b111100 -"
1$
#170000
0$
#175000
b1000100 0
b1000100 +"
b1000100 ,"
b1000100 1
b1000100 )"
b1000000 2
b1000000 p
b1000000 -"
b1000000 i
b111100 h
b111100 a
b111000 `
b110100 Q
b110100 *"
b111000 R
1$
#180000
0$
#185000
b1001000 0
b1001000 +"
b1001000 ,"
b111000 Q
b111000 *"
b111100 R
b1000000 a
b111100 `
b1000100 i
b1000000 h
b1001000 1
b1001000 )"
b1000100 2
b1000100 p
b1000100 -"
1$
#190000
0$
#195000
b1001100 0
b1001100 +"
b1001100 ,"
b1001100 1
b1001100 )"
b1001000 2
b1001000 p
b1001000 -"
b1001000 i
b1000100 h
b1000100 a
b1000000 `
b111100 Q
b111100 *"
b1000000 R
1$
#200000
0$
#205000
b1010000 0
b1010000 +"
b1010000 ,"
b1000000 Q
b1000000 *"
b1000100 R
b1001000 a
b1000100 `
b1001100 i
b1001000 h
b1010000 1
b1010000 )"
b1001100 2
b1001100 p
b1001100 -"
1$
#210000
0$
